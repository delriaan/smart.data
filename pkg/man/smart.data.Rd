% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/smart.data.R
\name{smart.data}
\alias{smart.data}
\title{Smart Interaction With Data}
\description{
The goal of the \code{smart.data} package is to provide an API that allows for semantic interaction with tabular data as well as governed manipulation of the same.  Each \code{smart.data} object is an R6 reference class instance which can be symbolically retrieved from memory cache (see \code{\link[cachem]{cachem_mem}}) as well as by direct workspace object invocation.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{A \code{\link[data.table]{data.table}} object holding the current state of the data}

\item{\code{name}}{The label to use to semantically retrieve the \code{smart.data} object from cache}

\item{\code{id}}{An auto-generated unique ID for the \code{smart.data} object}

\item{\code{smart.rules}}{An environment holding user-generated sets of rules}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{get.history}}{Returns the saved history from calls to \code{$capture()}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-smart.data-new}{\code{smart.data$new()}}
\item \href{#method-smart.data-naming.rule}{\code{smart.data$naming.rule()}}
\item \href{#method-smart.data-taxonomy.rule}{\code{smart.data$taxonomy.rule()}}
\item \href{#method-smart.data-enforce.rules}{\code{smart.data$enforce.rules()}}
\item \href{#method-smart.data-set.private}{\code{smart.data$set.private()}}
\item \href{#method-smart.data-reset}{\code{smart.data$reset()}}
\item \href{#method-smart.data-use}{\code{smart.data$use()}}
\item \href{#method-smart.data-cache_mgr}{\code{smart.data$cache_mgr()}}
\item \href{#method-smart.data-capture}{\code{smart.data$capture()}}
\item \href{#method-smart.data-clone}{\code{smart.data$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-new"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-new}{}}}
\subsection{Method \code{new()}}{
Initialize the class object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$new(x, name = "new_data", ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The input data}

\item{\code{name}}{The name for the smart class when used in smart functions}

\item{\code{...}}{Arguments used to initialize the smart cache (see \code{\link[cachem]{cache_layered}} and related).  If none are provided, the default is to create a memory cache via \code{\link[cachem]{cache_mem}}}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-naming.rule"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-naming.rule}{}}}
\subsection{Method \code{naming.rule()}}{
\code{$naming.rule} provides the prescribed laws for renaming the fields found in \code{self$data}.  The specified fields found in \code{self$data} are renamed when the "law" is enforced.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$naming.rule(..., show = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Key-value pairs denoting the naming scheme: new_name = old_name. Items with no key will be used as its own name. \code{\link[rlang]{dots_list}} supported.}

\item{\code{show}}{(logical) When \code{TRUE} the structure of the rule is printed to console}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Before invisibly returning the class object, a list is saved to \code{self$smart.rules$for_naming} containing derived objects used by attribute "law": the expression representing the actions to take when enforced
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-taxonomy.rule"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-taxonomy.rule}{}}}
\subsection{Method \code{taxonomy.rule()}}{
\code{$taxonomy.rule()} sets class object \code{$smart.rules$for_usage} which is referenced by method \code{$use()}.  \code{$taxonomy.rule} creates a mapping of fields in \code{$data} to labels that can be used to reference them.

Parameter \code{term.map} is a \code{\link[data.table]{data.table}} object with the following required fields:
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$taxonomy.rule(..., gui = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(\code{\link[rlang]{dots_list}}) A taxonomy objects created with \code{\link{taxonomy}}. Alternatively, \emph{named} lists may be provided which conform to the following:\cr
\describe{
\item{term}{(character) The name of the taxonomy term}
\item{desc}{(character) A description for each term's interpretation or context for usage }
\item{fields}{(string[]) Optionally provided: contains a vector of field names in \code{$data} mapped to the term}
}}

\item{\code{gui}}{(logical|FALSE) Should an the GUI for interactive rules management be shown?  \code{TRUE} invokes \code{\link[listviewer]{jsonedit_gadget}} which has the benefit of multi-select drag-n-drop arrangement of terms as well as provides the ability to duplicate field entries under multiple terms}

\item{\code{chatty}}{(logical|FALSE) Should additional information be printed to the console?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-enforce.rules"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-enforce.rules}{}}}
\subsection{Method \code{enforce.rules()}}{
\code{$enforce.rules} operates on rules saved in \code{$smart.rules} and evaluates the quoted "law" on \code{$data}.  Custom rules can be directly added to class member \code{$smart.rules}: they must have an attribute "law" containing a quoted expression referencing object \code{.data} and \code{rule}.  The rule should contain any objects referenced by the quoted expression.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$enforce.rules(..., chatty = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{(string[]) The names of the rules to enforce}

\item{\code{chatty}}{(logical|FALSE) Should additional execution information be printed to console?}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly, the class object with member \code{$data} modified according to the rules enforced
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-set.private"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-set.private}{}}}
\subsection{Method \code{set.private()}}{
\code{$set.private} operates on the private class list accessed internally as \code{$private} using key-value pairs (i.e. key = value)
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$set.private(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{A named list: existing names in private indicate elements to overwrite}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly, the class object with member \code{$data} modified according to the rules enforced
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-reset"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-reset}{}}}
\subsection{Method \code{reset()}}{
\code{$reset} restores the object \code{$data} to the original value and re-initializes rules
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$reset(safe = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{safe}}{(logical | TRUE) When \code{TRUE}, a confirmation dialog is invoked.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly, the class object with member \code{$data} modified to the original state
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-use"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-use}{}}}
\subsection{Method \code{use()}}{
\code{$use} takes as input taxonomy terms and returns the fields in \code{$data} mapped to each term supplied.  The idea here is to provide a semantic method for retrieving data.

When no arguments are supplied, the default is to return the fields mapped to existing terms.  Using \code{retain = ''} returns all values making it equivalent to \code{smart_obj$data}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$use(
  ...,
  subset = TRUE,
  retain = NULL,
  omit = NULL,
  show = FALSE,
  chatty = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Taxonomy terms as defined by \code{self$transformation.rule}: can be object names or strings}

\item{\code{subset}}{A list of quoted expressions that will row-wise filter the data using \code{\link[data.table]{data.table}} syntax}

\item{\code{retain, omit}}{A vector of strings and symbols denoting the fields to retain in the output: pattern-matching is supported}

\item{\code{show}}{(logical|FALSE) Should the rule be shown?}

\item{\code{chatty}}{(logical | TRUE) When \code{TRUE}, a confirmation dialog is invoked.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
\code{self$data} with columns selected based on the terms supplied
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-cache_mgr"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-cache_mgr}{}}}
\subsection{Method \code{cache_mgr()}}{
\code{$cache_mgr} adds the current object to the shared "smart" cache space (see \code{\link[cachem]{cache_layered}}).  The shared cache is layered as 'memory' followed by 'disk.'
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$cache_mgr(action, chatty = FALSE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{action}}{One of the following (partial matching supported):\cr
\itemize{
\item{Add to cache: \code{register}, \code{add}}
\item{Remove from cache: \code{unregister}, \code{remove}}
\item{Update in cache: \code{update}, \code{refresh}}
}}

\item{\code{chatty}}{(logical | TRUE) When \code{TRUE}, a confirmation dialog is invoked.}

\item{\code{...}}{Additional arguments to use when initializing a cache object}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-capture"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-capture}{}}}
\subsection{Method \code{capture()}}{
\code{$capture} captures the current state of objects in \code{$smart.rules} and saves distinct entries as JSON objects.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$capture()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-smart.data-clone"></a>}}
\if{latex}{\out{\hypertarget{method-smart.data-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{smart.data$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
